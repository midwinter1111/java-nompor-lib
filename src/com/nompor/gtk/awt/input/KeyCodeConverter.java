package com.nompor.gtk.awt.input;

import static com.nompor.gtk.input.GTKKeyCode.*;

import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.Map;

import com.nompor.gtk.input.GTKKeyCode;

public class KeyCodeConverter {

	private static final Map<Integer,GTKKeyCode> map = new HashMap<>();
	private static final Map<GTKKeyCode,Integer> map2 = new HashMap<>();
	static {
		map.put(KeyEvent.VK_ENTER,			ENTER);
		map.put(KeyEvent.VK_BACK_SPACE,		BACKSPACE);
		map.put(KeyEvent.VK_TAB,			TAB);
		map.put(KeyEvent.VK_CANCEL,			CANCEL);
		map.put(KeyEvent.VK_CLEAR,			CLEAR);
		map.put(KeyEvent.VK_PAUSE,			PAUSE);
		map.put(KeyEvent.VK_ESCAPE,			ESCAPE);
		map.put(KeyEvent.VK_SPACE,			SPACE);
		map.put(KeyEvent.VK_DELETE,			DELETE);
		map.put(KeyEvent.VK_PRINTSCREEN,	PRINTSCREEN);
		map.put(KeyEvent.VK_INSERT,			INSERT);
		map.put(KeyEvent.VK_HELP,			HELP);
		map.put(KeyEvent.VK_SHIFT,			SHIFT);
		map.put(KeyEvent.VK_CONTROL,		CONTROL);
		map.put(KeyEvent.VK_ALT,			ALT);
		map.put(KeyEvent.VK_ALT_GRAPH,		ALT_GRAPH);
		map.put(KeyEvent.VK_WINDOWS,		WINDOWS);
		map.put(KeyEvent.VK_CONTEXT_MENU,	CONTEXT_MENU);
		map.put(KeyEvent.VK_CAPS_LOCK,		CAPS_LOCK);
		map.put(KeyEvent.VK_NUM_LOCK,		NUM_LOCK);
		map.put(KeyEvent.VK_SCROLL_LOCK,	SCROLL_LOCK);
		//map.put(KeyEvent.VK_COMMAND,		COMMAND);
		map.put(KeyEvent.VK_PAGE_UP,		PAGE_UP);
		map.put(KeyEvent.VK_PAGE_DOWN,		PAGE_DOWN);
		map.put(KeyEvent.VK_END,			END);
		map.put(KeyEvent.VK_HOME,			HOME);
		map.put(KeyEvent.VK_LEFT,			LEFT);
		map.put(KeyEvent.VK_UP,				UP);
		map.put(KeyEvent.VK_RIGHT,			RIGHT);
		map.put(KeyEvent.VK_DOWN,			DOWN);
		map.put(KeyEvent.VK_COMMA,			COMMA);
		map.put(KeyEvent.VK_MINUS,			MINUS);
		map.put(KeyEvent.VK_PERIOD,			PERIOD);
		map.put(KeyEvent.VK_SLASH,			SLASH);
		map.put(KeyEvent.VK_SEMICOLON,		SEMICOLON);
		map.put(KeyEvent.VK_EQUALS,			EQUALS);
		map.put(KeyEvent.VK_OPEN_BRACKET,	OPEN_BRACKET);
		map.put(KeyEvent.VK_BACK_SLASH,		BACK_SLASH);
		map.put(KeyEvent.VK_CLOSE_BRACKET,	CLOSE_BRACKET);
		map.put(KeyEvent.VK_MULTIPLY,		MULTIPLY);
		map.put(KeyEvent.VK_ADD,			ADD);
		map.put(KeyEvent.VK_SEPARATOR,		SEPARATOR);
		map.put(KeyEvent.VK_SUBTRACT,		SUBTRACT);
		map.put(KeyEvent.VK_DECIMAL,		DECIMAL);
		map.put(KeyEvent.VK_DIVIDE,			DIVIDE);
		map.put(KeyEvent.VK_AMPERSAND,		AMPERSAND);
		map.put(KeyEvent.VK_ASTERISK,		ASTERISK);
		//map.put(KeyEvent.VK_DOUBLE,	DOUBLE_QUOTE);
		map.put(KeyEvent.VK_LESS,			LESS);
		map.put(KeyEvent.VK_GREATER,		GREATER);
		map.put(KeyEvent.VK_BRACELEFT,		BRACELEFT);
		map.put(KeyEvent.VK_BRACERIGHT,		BRACERIGHT);
		map.put(KeyEvent.VK_BACK_QUOTE,		BACK_QUOTE);
		map.put(KeyEvent.VK_QUOTE,			QUOTE);
		map.put(KeyEvent.VK_AT,				AT);
		map.put(KeyEvent.VK_COLON,			COLON);
		map.put(KeyEvent.VK_CIRCUMFLEX,		CIRCUMFLEX);
		map.put(KeyEvent.VK_DOLLAR,			DOLLAR);
		map.put(KeyEvent.VK_EURO_SIGN,					EURO_SIGN);
		map.put(KeyEvent.VK_EXCLAMATION_MARK,			EXCLAMATION);
		map.put(KeyEvent.VK_INVERTED_EXCLAMATION_MARK,	INVERTED_EXCLAMATION);
		map.put(KeyEvent.VK_LEFT_PARENTHESIS,			LEFT_PARENTHESIS);
		map.put(KeyEvent.VK_NUMBER_SIGN,				NUMBER_SIGN);
		map.put(KeyEvent.VK_PLUS,						PLUS);
		map.put(KeyEvent.VK_RIGHT_PARENTHESIS,			RIGHT_PARENTHESIS);
		map.put(KeyEvent.VK_UNDERSCORE,					UNDERSCORE);
		map.put(KeyEvent.VK_0,		NUMBER0);
		map.put(KeyEvent.VK_1,		NUMBER1);
		map.put(KeyEvent.VK_2,		NUMBER2);
		map.put(KeyEvent.VK_3,		NUMBER3);
		map.put(KeyEvent.VK_4,		NUMBER4);
		map.put(KeyEvent.VK_5,		NUMBER5);
		map.put(KeyEvent.VK_6,		NUMBER6);
		map.put(KeyEvent.VK_7,		NUMBER7);
		map.put(KeyEvent.VK_8,		NUMBER8);
		map.put(KeyEvent.VK_9,		NUMBER9);
		map.put(KeyEvent.VK_A,			A);
		map.put(KeyEvent.VK_B,			B);
		map.put(KeyEvent.VK_C,			C);
		map.put(KeyEvent.VK_D,			D);
		map.put(KeyEvent.VK_E,			E);
		map.put(KeyEvent.VK_F,			F);
		map.put(KeyEvent.VK_G,			G);
		map.put(KeyEvent.VK_H,			H);
		map.put(KeyEvent.VK_I,			I);
		map.put(KeyEvent.VK_J,			J);
		map.put(KeyEvent.VK_K,			K);
		map.put(KeyEvent.VK_L,			L);
		map.put(KeyEvent.VK_M,			M);
		map.put(KeyEvent.VK_N,			N);
		map.put(KeyEvent.VK_O,			O);
		map.put(KeyEvent.VK_P,			P);
		map.put(KeyEvent.VK_Q,			Q);
		map.put(KeyEvent.VK_R,			R);
		map.put(KeyEvent.VK_S,			S);
		map.put(KeyEvent.VK_T,			T);
		map.put(KeyEvent.VK_U,			U);
		map.put(KeyEvent.VK_V,			V);
		map.put(KeyEvent.VK_W,			W);
		map.put(KeyEvent.VK_X,			X);
		map.put(KeyEvent.VK_Y,			Y);
		map.put(KeyEvent.VK_Z,			Z);
		map.put(KeyEvent.VK_NUMPAD0,		NUMPAD0);
		map.put(KeyEvent.VK_NUMPAD1,		NUMPAD1);
		map.put(KeyEvent.VK_NUMPAD2,		NUMPAD2);
		map.put(KeyEvent.VK_NUMPAD3,		NUMPAD3);
		map.put(KeyEvent.VK_NUMPAD4,		NUMPAD4);
		map.put(KeyEvent.VK_NUMPAD5,		NUMPAD5);
		map.put(KeyEvent.VK_NUMPAD6,		NUMPAD6);
		map.put(KeyEvent.VK_NUMPAD7,		NUMPAD7);
		map.put(KeyEvent.VK_NUMPAD8,		NUMPAD8);
		map.put(KeyEvent.VK_NUMPAD9,		NUMPAD9);
		map.put(KeyEvent.VK_F1,			F1);
		map.put(KeyEvent.VK_F2,			F2);
		map.put(KeyEvent.VK_F3,			F3);
		map.put(KeyEvent.VK_F4,			F4);
		map.put(KeyEvent.VK_F5,			F5);
		map.put(KeyEvent.VK_F6,			F6);
		map.put(KeyEvent.VK_F7,			F7);
		map.put(KeyEvent.VK_F8,			F8);
		map.put(KeyEvent.VK_F9,			F9);
		map.put(KeyEvent.VK_F10,		F10);
		map.put(KeyEvent.VK_F11,		F11);
		map.put(KeyEvent.VK_F12,		F12);
		map.put(KeyEvent.VK_F13,		F13);
		map.put(KeyEvent.VK_F14,		F14);
		map.put(KeyEvent.VK_F15,		F15);
		map.put(KeyEvent.VK_F16,		F16);
		map.put(KeyEvent.VK_F17,		F17);
		map.put(KeyEvent.VK_F18,		F18);
		map.put(KeyEvent.VK_F19,		F19);
		map.put(KeyEvent.VK_F20,		F20);
		map.put(KeyEvent.VK_F21,		F21);
		map.put(KeyEvent.VK_F22,		F22);
		map.put(KeyEvent.VK_F23,		F23);
		map.put(KeyEvent.VK_F24,		F24);

		map.forEach((k,v)->map2.put(v, k));
	}
	public static GTKKeyCode toGTKCode(Integer key) {
		return map.get(key);
	}
	public static Integer toCode(GTKKeyCode key) {
		return map2.get(key);
	}
}
